
IS_MACOSX=$([[ `uname -s` =~ ^Darwin ]] && echo 1)


# Exports --------------------------------------------------
# Many from https://github.com/mathiasbynens/dotfiles/

export EDITOR="$([[ `type -p code` ]] && echo code -w || echo vim)"

# Increase Bash history size. Allow 32³ entries; the default is 500.
export HISTSIZE='32768'
export HISTFILESIZE="${HISTSIZE}"
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth'

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X'

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848
export GPG_TTY=$(tty);


# Path -----------------------------------------------------

__deduplicate_path() {
    # https://unix.stackexchange.com/a/124517
    printf %s "$PATH" | awk -v RS=: '!a[$0]++' | paste -s -d: -
}

[[ `type -t brew` ]] && PATH="$(brew --prefix)/bin:$PATH"
[[ -d $HOME/bin ]] && PATH="$HOME/bin:$PATH"
export PATH=$(__deduplicate_path "$PATH")


# Prompt ---------------------------------------------------
# https://superuser.com/q/1619614

__git_prompt() {
    if [[ ! `type -t __git_ps1` ]]; then

        __git_ps1 " %s"

    else

        if [[ `type -p git` && `git rev-parse --is-inside-work-tree 2>/dev/null` ]]; then

            # https://github.com/mathiasbynens/dotfiles/
            # Check for what branch we’re on. Get the short
	        # symbolic ref. If HEAD isn’t a symbolic ref, get a
	        # tracking remote branch or tag. Otherwise, get the
	        # short SHA for the latest commit, or give up.
	        echo " $(
                git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                    git describe --all --exact-match HEAD 2> /dev/null || \
		            git rev-parse --short HEAD 2> /dev/null || \
		            echo '(unknown)'
            )"

        fi

    fi
}

__trunc_pwd() {
    # Turn /Users/tshafer/somedir/someotherdir -> ~/s/someotherdir
    pwd | sed -r -e "s:$HOME:~:" -e 's:([^/])([^/]+/):\1/:g'
}

__prompt_command() {
    PRE_PS1=$([[ -n $PS1_PREFIX ]] && echo "$PS1_PREFIX ")
    GIT_PS1=$(__git_prompt)
    PWD_PS1=$(__trunc_pwd)
    PS1='$PRE_PS1\[\e[0;32m\]$PWD_PS1\[\e[0m\]\[\e[0;33m\]$GIT_PS1\[\e[0m\] \$ '
}

PROMPT_COMMAND=__prompt_command


# Aliases --------------------------------------------------

alias ..='cd ..'
alias -- -='cd -'

# MacOS only
if [[ -z $IS_MACOSX ]]; then
    alias o='command open'
    alias oo='o .'
fi

# Directory listings -- I prefer 'exa' if I have it
if [[ `which exa` ]]; then

    alias ls='exa --no-permissions --octal-permissions --color-scale --group-directories-first --git -Fg'

    alias l='ls -l'
    alias ll='l -a'
    alias la='ll -a'
    alias lt='l --sort=name'
    alias lr='lt --reverse'

else

    # MacOS has a different set of arguments for ls.
    if [[ -z $IS_MACOSX ]]; then
        alias ls="command ls -GFh"
    else
        alias ls="command ls --color -Fh"
    fi

    alias l='ls -l'
    alias ll='l -Ak'
    alias la='l -a'
    alias lt='l -r'
    alias lr='lt -t'

fi


# Cleanup --------------------------------------------------

unset IS_MACOSX
